name: CI - Test, Lint, and Security

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

# Cancel in-progress runs for the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Explicit permissions (principle of least privilege)
permissions:
  contents: read        # Checkout code
  pull-requests: write  # Comment on PRs with coverage
  actions: read         # Upload artifacts

jobs:
  test:
    name: Test and Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./src

      - name: Run linting
        run: npm run lint
        working-directory: ./src

      - name: Run type checking
        run: npm run typecheck
        working-directory: ./src

      - name: Run unit tests
        run: npm test -- --run
        working-directory: ./src

      - name: Run unit tests with coverage
        run: npm run test:coverage -- --run
        working-directory: ./src

      - name: Check coverage threshold
        run: |
          # Use Node.js to parse coverage JSON and check threshold
          # More robust than bc/grep and already available in CI environment
          node -e "
            const fs = require('fs');
            const coveragePath = './coverage/coverage-summary.json';

            if (!fs.existsSync(coveragePath)) {
              console.error('Error: Coverage file not found');
              process.exit(1);
            }

            const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
            const lineCoverage = coverage.total.lines.pct;

            console.log('Coverage: ' + lineCoverage + '%');

            if (lineCoverage < 80) {
              console.error('Error: Coverage ' + lineCoverage + '% is below 80% threshold');
              process.exit(1);
            }

            console.log('Coverage check passed: ' + lineCoverage + '% >= 80%');
          "
        working-directory: ./src

      - name: Security audit
        run: npm audit --audit-level=high
        working-directory: ./src
        # Changed to 'high' threshold: Moderate vulnerabilities allowed as warnings
        # High and critical vulnerabilities will fail the build
        # This balances security with pragmatic dependency management

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        working-directory: ./src

      - name: Run E2E tests
        run: npm run test:e2e
        working-directory: ./src
        env:
          CI: true

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage/
          retention-days: 30

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: src/playwright-report/
          retention-days: 30

      - name: Upload Playwright traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: src/test-results/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coveragePath = 'src/coverage/coverage-summary.json';

            if (!fs.existsSync(coveragePath)) {
              console.log('No coverage report found');
              return;
            }

            const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
            const { lines, statements, functions, branches } = coverage.total;

            const comment = `## Test Coverage Report

            | Metric | Coverage | Status |
            |--------|----------|--------|
            | Lines | ${lines.pct.toFixed(2)}% | ${lines.pct >= 80 ? '✅' : '❌'} |
            | Statements | ${statements.pct.toFixed(2)}% | ${statements.pct >= 80 ? '✅' : '❌'} |
            | Functions | ${functions.pct.toFixed(2)}% | ${functions.pct >= 80 ? '✅' : '❌'} |
            | Branches | ${branches.pct.toFixed(2)}% | ${branches.pct >= 80 ? '✅' : '❌'} |

            **Required Threshold:** 80%

            View full report in the [workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
